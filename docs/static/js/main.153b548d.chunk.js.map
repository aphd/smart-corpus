{"version":3,"sources":["services/handle-metrics.jsx","components/cue-form.jsx","components/cart-context.jsx","components/row-table.jsx","services/handle-contracs-download.jsx","components/cart.jsx","components/header-table.jsx","components/table.jsx","utils/metrics.jsx","App.jsx","serviceWorker.js","index.js"],"names":["options","pragma_versions","greater_than","Any","handleMetrics","query","this","Object","assign","total_lines","functions","modifiers","payable","version","fetch","then","res","json","data","setState","filter","v","vrsion","match","catch","err","console","log","CueForm","state","loading","initialValues","Type","CV","onSubmit","props","finally","values","errors","isSubmitting","name","as","TextField","select","label","SelectProps","native","entries","map","key","k","type","className","disabled","Component","CartContext","React","createContext","CartProvider","useState","cart","setCart","Provider","value","children","RowTable","useContext","checked","setChecked","id","onChange","e","target","contract","addr","contractAddress","c","i","metrics","length","text","slice","parse","handleContractsDownload","forEach","fn","url","substr","method","resp","sourceCode","result","SourceCode","blob","Blob","a","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","remove","downloadFile","Cart","hide","no_hide","colSpan","class","total","onClick","HeaderTable","metric","index","replace","toLowerCase","Table","getRowsData","METRICS","shouldRendTheComponent","keys","indexOf","splice","unshift","moveToFirstPosition","valuesToRemove","removeElements","App","render","handleSubmit","bind","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.153b548d.chunk.js","sourcesContent":["export const options = {\n    pragma_versions: [\"Any\", \"0.4.*\", \"0.5.*\", \"0.6.*\"],\n    greater_than: {\n        Any: 0,\n        \"Greater than 1\": 1,\n        \"Greater than 10\": 10,\n        \"Greater than 100\": 100, //,\n        // \"Greater than 1000\": { $gt: 1000 }\n    },\n};\n\nexport const handleMetrics = function (query) {\n    // TODO to improve code readability/reusability\n    // this.query[\"total_lines\"] should be based on check type\n    // TODO you need to get the data from the mongodb.\n    this.query = Object.assign({}, query);\n    const metricsUrl =\n        \"https://raw.githubusercontent.com/aphd/smac-corpus-api/master/data/metrics.json\";\n    const total_lines = options.greater_than[query[\"total_lines\"]] || 0;\n    const functions = options.greater_than[query[\"functions\"]] || 0;\n    const modifiers = options.greater_than[query[\"modifiers\"]] || 0;\n    const payable = options.greater_than[query[\"payable\"]] || 0;\n    const version = query[\"vrsion\"] === \"Any\" ? \".\" : query[\"vrsion\"] || \".\";\n    return fetch(metricsUrl)\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState({\n                data: data.filter(\n                    (v) =>\n                        v.total_lines >= total_lines &&\n                        v.functions >= functions &&\n                        v.modifiers >= modifiers &&\n                        v.payable >= payable &&\n                        v.vrsion.match(version)\n                ),\n            });\n        })\n        .catch((err) => console.log(\"catch:\\n\", err));\n};\n","import React, { Component } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { options } from \"../services/handle-metrics\";\n\nexport class CueForm extends Component {\n    state = {\n        loading: false,\n    };\n    render() {\n        return (\n            <Formik\n                initialValues={{ Type: \"Any\", CV: \"Any\" }}\n                onSubmit={(data) => {\n                    this.setState({ loading: true });\n                    this.props\n                        .onSubmit(data)\n                        .finally(() => this.setState({ loading: false }));\n                }}\n            >\n                {({ values, errors, isSubmitting }) => (\n                    <Form>\n                        {/* TODO add a factory method */}\n                        <Field\n                            name=\"vrsion\"\n                            as={TextField}\n                            select\n                            label=\"pragma version\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                        >\n                            {Object.entries(options.pragma_versions).map(\n                                (v) => (\n                                    <option key={v[1]}>{v[1]}</option>\n                                )\n                            )}\n                        </Field>\n                        <Field\n                            name=\"total_lines\"\n                            as={TextField}\n                            select\n                            label=\"Source lines of code\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                        >\n                            {Object.entries(options.greater_than).map(\n                                (k, v) => (\n                                    <option key={v}>{k[0]}</option>\n                                )\n                            )}\n                        </Field>\n                        <Field\n                            name=\"functions\"\n                            as={TextField}\n                            select\n                            label=\"Number of functions\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                        >\n                            {Object.entries(options.greater_than).map(\n                                (k, v) => (\n                                    <option key={v}>{k[0]}</option>\n                                )\n                            )}\n                        </Field>\n                        <Field\n                            name=\"modifiers\"\n                            as={TextField}\n                            select\n                            label=\"Number of modifiers\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                        >\n                            {Object.entries(options.greater_than).map(\n                                (k, v) => (\n                                    <option key={v}>{k[0]}</option>\n                                )\n                            )}\n                        </Field>\n                        <Field\n                            name=\"payable\"\n                            as={TextField}\n                            select\n                            label=\"Number of payable\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                        >\n                            {Object.entries(options.greater_than).map(\n                                (k, v) => (\n                                    <option key={v}>{k[0]}</option>\n                                )\n                            )}\n                        </Field>\n                        <button\n                            type=\"submit\"\n                            className={`btn btn-primary`}\n                            disabled={this.state.loading}\n                        >\n                            <span\n                                className={`spinner-border spinner-border-sm ${\n                                    this.state.loading ? \"mr-2\" : \"d-none\"\n                                }`}\n                            ></span>\n                            Submit\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        );\n    }\n}\n","import React, { useState } from \"react\";\n\nexport const CartContext = React.createContext();\nexport const CartProvider = (props) => {\n    const [cart, setCart] = useState([]);\n    return (\n        <CartContext.Provider value={[cart, setCart]}>\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n","import React, { useContext } from \"react\";\nimport parse from \"html-react-parser\";\nimport { CartContext } from \"./cart-context\";\n\nexport const RowTable = (props) => {\n    const [cart, setCart] = useContext(CartContext);\n    const [checked, setChecked] = React.useState(false);\n    const addToCart = (e) => {\n        setChecked(e.target.checked);\n        const contract = { id: props.id, addr: props.data.contractAddress };\n        setCart((c) =>\n            checked ? c.filter((v, i) => v.id !== props.id) : [...c, contract]\n        );\n    };\n\n    const getURL = (addr) => `https://etherscan.io/address/${addr}#code`;\n\n    const getTDs = () =>\n        props.metrics.map((k, i) => {\n            let v = props.data[k];\n            if (v.length > 15) {\n                let text = `${v.slice(0, 15)}...`;\n                v = parse(`<a href=\"${getURL(v)}\" target=\"_\">${text}</a>`);\n            }\n            return <td key={i}>{v}</td>;\n        });\n    return (\n        <tr key={props.id}>\n            <td className=\"text-right\">\n                {/* {props.id + 1} */}\n                <input\n                    checked={checked}\n                    type=\"checkbox\"\n                    onChange={addToCart}\n                ></input>\n            </td>\n            {getTDs()}\n        </tr>\n    );\n};\n","const domain =\n    \"https://raw.githubusercontent.com/aphd/smac-corpus-api/master/data/contracts/\";\n\nconst downloadFile = (addr) => {\n    const fn = `${addr}.json`;\n    const url = `${domain}/${addr.substr(0, 4)}/${fn}`;\n\n    return fetch(url, {\n        method: \"GET\",\n    })\n        .then(function (resp) {\n            return resp.json();\n        })\n        .then(function (json) {\n            const sourceCode = json.result[0].SourceCode;\n            const blob = new Blob([sourceCode], { type: \"application/json\" });\n            const a = document.createElement(\"a\");\n            a.href = window.URL.createObjectURL(blob);\n            a.download = fn;\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n        });\n};\n\nexport const handleContractsDownload = (cart) => {\n    cart.forEach((contract) => {\n        downloadFile(contract.addr);\n    });\n};\n","import React, { useContext } from \"react\";\nimport { CartContext } from \"./cart-context\";\nimport { handleContractsDownload } from \"../services/handle-contracs-download\";\n\nexport const Cart = (props) => {\n    const [cart] = useContext(CartContext);\n    const hide = cart.length ? \"\" : \"d-none\";\n    const no_hide = cart.length ? \"d-none\" : \"\";\n    const onContractsDownload = () => {\n        handleContractsDownload(cart);\n    };\n    return (\n        <tr>\n            <td colSpan=\"100\">\n                <button type=\"button\" className={`btn btn-info ${no_hide}`}>\n                    Select the checkboxes to download the smart contracts -\n                    Total number of contracts:{\" \"}\n                    <span class=\"badge badge-light\">{props.total}</span>\n                </button>\n                <button\n                    onClick={onContractsDownload}\n                    type=\"button\"\n                    className={`btn btn-info ${hide}`}\n                >\n                    Download{\" \"}\n                    <span className=\"badge badge-light\">{cart.length}</span>{\" \"}\n                    smart contracts\n                </button>\n            </td>\n        </tr>\n    );\n};\n","import React from \"react\";\n\nexport const HeaderTable = props => {\n    const getHeader = function() {\n        return props.metrics.map((metric, index) => {\n            metric = metric.replace(\"_\", \" \");\n            return (\n                <th className=\"align-middle\" key={index}>\n                    {metric.toLowerCase()}\n                </th>\n            );\n        });\n    };\n\n    return (\n        <tr>\n            <td className=\"text-right\">&nbsp;</td>\n            {getHeader()}\n        </tr>\n    );\n};\n","import React, { Component } from \"react\";\nimport { RowTable } from \"./row-table\";\nimport { Cart } from \"./cart\";\nimport { HeaderTable } from \"./header-table\";\nimport { metrics } from \"../utils/metrics\";\n\nexport class Table extends Component {\n    constructor(props) {\n        super(props);\n        this.METRICS = null;\n        this.total = 0;\n    }\n\n    getRowsData = () => {\n        return this.props.data.map((v, i) => {\n            return <RowTable key={i} id={i} data={v} metrics={this.METRICS} />;\n        });\n    };\n\n    render() {\n        const shouldRendTheComponent =\n            this.props.data && this.props.data.length > 0;\n        if (shouldRendTheComponent) {\n            this.METRICS = metrics(this.props.data[0]);\n            this.total = this.props.data.length;\n        }\n\n        return (\n            shouldRendTheComponent && (\n                <table className=\"table table-hover table-sm table-bordered mt-5\">\n                    <thead>\n                        <Cart total={this.total} />\n                        <HeaderTable metrics={this.METRICS} />\n                    </thead>\n                    <tbody>{this.getRowsData()}</tbody>\n                </table>\n            )\n        );\n    }\n}\n","const moveToFirstPosition = function(keys, value) {\n    let index = keys.indexOf(value);\n    if (index > -1) {\n        keys.splice(index, 1);\n        keys.unshift(\"contractAddress\");\n    }\n    return keys;\n};\n\nconst removeElements = (keys, valuesToRemove) =>\n    keys.filter(i => valuesToRemove.indexOf(i) === -1);\n\nexport const metrics = function(data) {\n    let keys = Object.keys(data);\n    keys = removeElements(keys, [\"_id\", \"blanks\", \"contracts_definition\"]);\n    return moveToFirstPosition(keys, \"contractAddress\");\n};\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport \"./App.css\";\nimport { CueForm } from \"./components/cue-form\";\nimport { Table } from \"./components/table\";\nimport { handleMetrics } from \"./services/handle-metrics\";\nimport { CartProvider } from \"./components/cart-context\";\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.handleSubmit = handleMetrics.bind(this);\n    }\n\n    render = () => {\n        return (\n            <CartProvider>\n                <HelmetProvider>\n                    <Helmet>\n                        <title>Smac-Corpus</title>\n                    </Helmet>\n                </HelmetProvider>\n                <CueForm onSubmit={this.handleSubmit} />\n                <Table data={this.state && this.state.data} />\n            </CartProvider>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}